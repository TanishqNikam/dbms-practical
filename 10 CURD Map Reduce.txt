mongosh
// Show existing databases
show dbs

// Use or create the database
use mydatabase

// Create the collection
db.createCollection("items");

// Insert multiple documents
db.items.insertMany([
    { "item_id": 1, "item_quantity": 100, "price": 50, "brand": "BrandA" },
    { "item_id": 2, "item_quantity": 150, "price": 30, "brand": "BrandB" },
    { "item_id": 3, "item_quantity": 200, "price": 20, "brand": "BrandA" },
    { "item_id": 4, "item_quantity": 250, "price": 60, "brand": "BrandC" },
    { "item_id": 5, "item_quantity": 300, "price": 40, "brand": "BrandB" }
]);

// Insert a single document
db.items.insertOne({ "item_id": 6, "item_quantity": 80, "price": 25, "brand": "BrandD" });

// Display all documents
db.items.find().pretty();

// Update a document
db.items.updateOne({ "item_id": 1 }, { $set: { "item_quantity": 120 } });

// Delete a document
db.items.deleteOne({ "item_id": 2 });

// MapReduce to sum item quantities for each item_id
var mapFunction = function() {
    emit(this.item_id, this.item_quantity);
};

var reduceFunction = function(key, values) {
    return Array.sum(values);
};

db.items.mapReduce(
    mapFunction,
    reduceFunction,
    { out: "item_quantity_count" }
);

// Display MapReduce results
db.item_quantity_count.find().pretty();

// Create a new item and save it
var newItem = { "item_id": 7, "item_quantity": 50, "price": 15, "brand": "BrandE" };
db.items.save(newItem);

// Update the item with item_id 7 and save it
newItem.item_quantity = 75;
db.items.save(newItem);


db.items.insertOne({ "item_id": 7, "item_quantity": 50, "price": 15, "brand": "BrandE" });
